define(['dart_sdk', 'packages/firebase/src/storage.dart', 'packages/firebase/src/js.dart'], (function load__packages__firebase__src__remote_config_dart(dart_sdk, packages__firebase__src__storage$46dart, packages__firebase__src__js$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const utils = packages__firebase__src__storage$46dart.src__utils;
  const js = packages__firebase__src__js$46dart.src__js;
  var remote_config = Object.create(dart.library);
  var $map = dartx.map;
  var $_get = dartx._get;
  var $toString = dartx.toString;
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var MapOfStringL$dynamic = () => (MapOfStringL$dynamic = dart.constFn(core.Map$(StringL(), dart.dynamic)))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var RemoteConfigValueL = () => (RemoteConfigValueL = dart.constFn(dart.legacy(remote_config.RemoteConfigValue)))();
  var MapEntryOfStringL$RemoteConfigValueL = () => (MapEntryOfStringL$RemoteConfigValueL = dart.constFn(core.MapEntry$(StringL(), RemoteConfigValueL())))();
  var MapEntryLOfStringL$RemoteConfigValueL = () => (MapEntryLOfStringL$RemoteConfigValueL = dart.constFn(dart.legacy(MapEntryOfStringL$RemoteConfigValueL())))();
  var dynamicToMapEntryLOfStringL$RemoteConfigValueL = () => (dynamicToMapEntryLOfStringL$RemoteConfigValueL = dart.constFn(dart.fnType(MapEntryLOfStringL$RemoteConfigValueL(), [dart.dynamic])))();
  var MapOfStringL$RemoteConfigValueL = () => (MapOfStringL$RemoteConfigValueL = dart.constFn(core.Map$(StringL(), RemoteConfigValueL())))();
  var RemoteConfigLogLevelL = () => (RemoteConfigLogLevelL = dart.constFn(dart.legacy(remote_config.RemoteConfigLogLevel)))();
  var RemoteConfigL = () => (RemoteConfigL = dart.constFn(dart.legacy(remote_config.RemoteConfig)))();
  var ExpandoOfRemoteConfigL = () => (ExpandoOfRemoteConfigL = dart.constFn(core.Expando$(RemoteConfigL())))();
  var RemoteConfigValueSourceL = () => (RemoteConfigValueSourceL = dart.constFn(dart.legacy(remote_config.RemoteConfigValueSource)))();
  var RemoteConfigFetchStatusL = () => (RemoteConfigFetchStatusL = dart.constFn(dart.legacy(remote_config.RemoteConfigFetchStatus)))();
  const CT = Object.create(null);
  var L0 = "file:///C:/Users/HP/Downloads/flutter/.pub-cache/hosted/pub.dartlang.org/firebase-7.3.0/lib/src/remote_config.dart";
  var L1 = "package:firebase/src/remote_config.dart";
  dart.defineLazy(CT, {
    get C1() {
      return C1 = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.debug",
        index: 0
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.error",
        index: 1
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: remote_config.RemoteConfigLogLevel.prototype,
        [_name$]: "RemoteConfigLogLevel.silent",
        index: 2
      });
    },
    get C0() {
      return C0 = dart.constMap(RemoteConfigLogLevelL(), StringL(), [C1 || CT.C1, "debug", C2 || CT.C2, "error", C3 || CT.C3, "silent"]);
    },
    get C4() {
      return C4 = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.static",
        index: 0
      });
    },
    get C5() {
      return C5 = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.defaults",
        index: 1
      });
    },
    get C6() {
      return C6 = dart.const({
        __proto__: remote_config.RemoteConfigValueSource.prototype,
        [_name$]: "RemoteConfigValueSource.remote",
        index: 2
      });
    },
    get C7() {
      return C7 = dart.constList([C4 || CT.C4, C5 || CT.C5, C6 || CT.C6], RemoteConfigValueSourceL());
    },
    get C8() {
      return C8 = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.notFetchedYet",
        index: 0
      });
    },
    get C9() {
      return C9 = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.success",
        index: 1
      });
    },
    get C10() {
      return C10 = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.failure",
        index: 2
      });
    },
    get C11() {
      return C11 = dart.const({
        __proto__: remote_config.RemoteConfigFetchStatus.prototype,
        [_name$]: "RemoteConfigFetchStatus.throttle",
        index: 3
      });
    },
    get C12() {
      return C12 = dart.constList([C8 || CT.C8, C9 || CT.C9, C10 || CT.C10, C11 || CT.C11], RemoteConfigFetchStatusL());
    },
    get C13() {
      return C13 = dart.constList([C1 || CT.C1, C2 || CT.C2, C3 || CT.C3], RemoteConfigLogLevelL());
    }
  }, false);
  var _name$ = dart.privateName(remote_config, "_name");
  var C1;
  var C2;
  var C3;
  var C0;
  remote_config.RemoteConfig = class RemoteConfig extends js.JsObjectWrapper$(dart.lazyJSType(() => dart.global.firebase.remoteConfig.RemoteConfig, "firebase.remoteConfig.RemoteConfig")) {
    static getInstance(jsObject) {
      let t3, t2, t1, t0;
      if (jsObject == null) {
        return null;
      }
      t0 = remote_config.RemoteConfig._expando;
      t1 = jsObject;
      t2 = t0._get(t1);
      return t2 == null ? (t3 = new remote_config.RemoteConfig._fromJsObject(jsObject), t0._set(t1, t3), t3) : t2;
    }
    get settings() {
      return new remote_config.RemoteConfigSettings._fromJsObject(this.jsObject.settings);
    }
    get defaultConfig() {
      return MapOfStringL$dynamic().unmodifiable(utils.dartifyMap(this.jsObject.defaultConfig));
    }
    set defaultConfig(value) {
      this.jsObject.defaultConfig = utils.jsify(value);
    }
    get fetchTime() {
      if (dart.notNull(this.jsObject.fetchTimeMillis) < 0) {
        return null;
      } else {
        return new core.DateTime.fromMillisecondsSinceEpoch(this.jsObject.fetchTimeMillis);
      }
    }
    get lastFetchStatus() {
      switch (this.jsObject.lastFetchStatus) {
        case "no-fetch-yet":
        {
          return remote_config.RemoteConfigFetchStatus.notFetchedYet;
        }
        case "success":
        {
          return remote_config.RemoteConfigFetchStatus.success;
        }
        case "failure":
        {
          return remote_config.RemoteConfigFetchStatus.failure;
        }
        case "throttle":
        {
          return remote_config.RemoteConfigFetchStatus.throttle;
        }
        default:
        {
          if (!false) dart.assertFailed(null, L0, 69, 16, "false");
          return null;
        }
      }
    }
    activate() {
      return async.async(boolL(), (function* activate() {
        return utils.handleThenable(boolL(), this.jsObject.activate());
      }).bind(this));
    }
    ensureInitialized() {
      return async.async(dart.void, (function* ensureInitialized() {
        return utils.handleThenable(dart.void, this.jsObject.ensureInitialized());
      }).bind(this));
    }
    fetch() {
      return async.async(dart.void, (function* fetch() {
        return utils.handleThenable(dart.void, this.jsObject.fetch());
      }).bind(this));
    }
    fetchAndActivate() {
      return async.async(boolL(), (function* fetchAndActivate() {
        return utils.handleThenable(boolL(), this.jsObject.fetchAndActivate());
      }).bind(this));
    }
    getAll() {
      let keys = dart.global.Object.keys(this.jsObject.getAll());
      let entries = keys[$map](MapEntryLOfStringL$RemoteConfigValueL(), dart.fn(k => new (MapEntryOfStringL$RemoteConfigValueL()).__(StringL().as(k), this.getValue(StringL().as(k))), dynamicToMapEntryLOfStringL$RemoteConfigValueL()));
      return MapOfStringL$RemoteConfigValueL().fromEntries(entries);
    }
    getBoolean(key) {
      return this.jsObject.getBoolean(key);
    }
    getNumber(key) {
      return this.jsObject.getNumber(key);
    }
    getString(key) {
      return this.jsObject.getString(key);
    }
    getValue(key) {
      return new remote_config.RemoteConfigValue._fromJsObject(this.jsObject.getValue(key));
    }
    setLogLevel(value) {
      this.jsObject.setLogLevel((C0 || CT.C0)[$_get](value));
    }
  };
  (remote_config.RemoteConfig._fromJsObject = function(jsObject) {
    remote_config.RemoteConfig.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfig.prototype;
  dart.addTypeTests(remote_config.RemoteConfig);
  dart.addTypeCaches(remote_config.RemoteConfig);
  dart.setMethodSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfig.__proto__),
    activate: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), []),
    ensureInitialized: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    fetch: dart.fnType(dart.legacy(async.Future$(dart.void)), []),
    fetchAndActivate: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), []),
    getAll: dart.fnType(dart.legacy(core.Map$(dart.legacy(core.String), dart.legacy(remote_config.RemoteConfigValue))), []),
    getBoolean: dart.fnType(dart.legacy(core.bool), [dart.legacy(core.String)]),
    getNumber: dart.fnType(dart.legacy(core.num), [dart.legacy(core.String)]),
    getString: dart.fnType(dart.legacy(core.String), [dart.legacy(core.String)]),
    getValue: dart.fnType(dart.legacy(remote_config.RemoteConfigValue), [dart.legacy(core.String)]),
    setLogLevel: dart.fnType(dart.void, [dart.legacy(remote_config.RemoteConfigLogLevel)])
  }));
  dart.setGetterSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getGetters(remote_config.RemoteConfig.__proto__),
    settings: dart.legacy(remote_config.RemoteConfigSettings),
    defaultConfig: dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic)),
    fetchTime: dart.legacy(core.DateTime),
    lastFetchStatus: dart.legacy(remote_config.RemoteConfigFetchStatus)
  }));
  dart.setSetterSignature(remote_config.RemoteConfig, () => ({
    __proto__: dart.getSetters(remote_config.RemoteConfig.__proto__),
    defaultConfig: dart.legacy(core.Map$(dart.legacy(core.String), dart.dynamic))
  }));
  dart.setLibraryUri(remote_config.RemoteConfig, L1);
  dart.defineLazy(remote_config.RemoteConfig, {
    /*remote_config.RemoteConfig._expando*/get _expando() {
      return new (ExpandoOfRemoteConfigL()).new();
    }
  }, true);
  remote_config.RemoteConfigValue = class RemoteConfigValue extends js.JsObjectWrapper$(dart.anonymousJSType("ValueJsImpl")) {
    asBoolean() {
      return this.jsObject.asBoolean();
    }
    asNumber() {
      return this.jsObject.asNumber();
    }
    asString() {
      return this.jsObject.asString();
    }
    getSource() {
      switch (this.jsObject.getSource()) {
        case "static":
        {
          return remote_config.RemoteConfigValueSource.static;
        }
        case "default":
        {
          return remote_config.RemoteConfigValueSource.defaults;
        }
        case "remote":
        {
          return remote_config.RemoteConfigValueSource.remote;
        }
        default:
        {
          if (!false) dart.assertFailed(null, L0, 170, 16, "false");
          return null;
        }
      }
    }
  };
  (remote_config.RemoteConfigValue._fromJsObject = function(jsObject) {
    remote_config.RemoteConfigValue.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfigValue.prototype;
  dart.addTypeTests(remote_config.RemoteConfigValue);
  dart.addTypeCaches(remote_config.RemoteConfigValue);
  dart.setMethodSignature(remote_config.RemoteConfigValue, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfigValue.__proto__),
    asBoolean: dart.fnType(dart.legacy(core.bool), []),
    asNumber: dart.fnType(dart.legacy(core.num), []),
    asString: dart.fnType(dart.legacy(core.String), []),
    getSource: dart.fnType(dart.legacy(remote_config.RemoteConfigValueSource), [])
  }));
  dart.setLibraryUri(remote_config.RemoteConfigValue, L1);
  var C4;
  var C5;
  var C6;
  var C7;
  remote_config.RemoteConfigValueSource = class RemoteConfigValueSource extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigValueSource.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigValueSource.prototype;
  dart.addTypeTests(remote_config.RemoteConfigValueSource);
  dart.addTypeCaches(remote_config.RemoteConfigValueSource);
  dart.setMethodSignature(remote_config.RemoteConfigValueSource, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfigValueSource.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(remote_config.RemoteConfigValueSource, L1);
  dart.setFieldSignature(remote_config.RemoteConfigValueSource, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigValueSource.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigValueSource, ['toString']);
  remote_config.RemoteConfigValueSource.static = C4 || CT.C4;
  remote_config.RemoteConfigValueSource.defaults = C5 || CT.C5;
  remote_config.RemoteConfigValueSource.remote = C6 || CT.C6;
  remote_config.RemoteConfigValueSource.values = C7 || CT.C7;
  remote_config.RemoteConfigSettings = class RemoteConfigSettings extends js.JsObjectWrapper$(dart.anonymousJSType("SettingsJsImpl")) {
    get minimumFetchInterval() {
      return new core.Duration.new({milliseconds: this.jsObject.minimumFetchIntervalMillis});
    }
    set minimumFetchInterval(value) {
      this.jsObject.minimumFetchIntervalMillis = value.inMilliseconds;
    }
    get fetchTimeoutMillis() {
      return new core.Duration.new({milliseconds: this.jsObject.fetchTimeoutMillis});
    }
    set fetchTimeoutMillis(value) {
      this.jsObject.fetchTimeoutMillis = value.inMilliseconds;
    }
  };
  (remote_config.RemoteConfigSettings._fromJsObject = function(jsObject) {
    remote_config.RemoteConfigSettings.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = remote_config.RemoteConfigSettings.prototype;
  dart.addTypeTests(remote_config.RemoteConfigSettings);
  dart.addTypeCaches(remote_config.RemoteConfigSettings);
  dart.setGetterSignature(remote_config.RemoteConfigSettings, () => ({
    __proto__: dart.getGetters(remote_config.RemoteConfigSettings.__proto__),
    minimumFetchInterval: dart.legacy(core.Duration),
    fetchTimeoutMillis: dart.legacy(core.Duration)
  }));
  dart.setSetterSignature(remote_config.RemoteConfigSettings, () => ({
    __proto__: dart.getSetters(remote_config.RemoteConfigSettings.__proto__),
    minimumFetchInterval: dart.legacy(core.Duration),
    fetchTimeoutMillis: dart.legacy(core.Duration)
  }));
  dart.setLibraryUri(remote_config.RemoteConfigSettings, L1);
  var C8;
  var C9;
  var C10;
  var C11;
  var C12;
  remote_config.RemoteConfigFetchStatus = class RemoteConfigFetchStatus extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigFetchStatus.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigFetchStatus.prototype;
  dart.addTypeTests(remote_config.RemoteConfigFetchStatus);
  dart.addTypeCaches(remote_config.RemoteConfigFetchStatus);
  dart.setMethodSignature(remote_config.RemoteConfigFetchStatus, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfigFetchStatus.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(remote_config.RemoteConfigFetchStatus, L1);
  dart.setFieldSignature(remote_config.RemoteConfigFetchStatus, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigFetchStatus.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigFetchStatus, ['toString']);
  remote_config.RemoteConfigFetchStatus.notFetchedYet = C8 || CT.C8;
  remote_config.RemoteConfigFetchStatus.success = C9 || CT.C9;
  remote_config.RemoteConfigFetchStatus.failure = C10 || CT.C10;
  remote_config.RemoteConfigFetchStatus.throttle = C11 || CT.C11;
  remote_config.RemoteConfigFetchStatus.values = C12 || CT.C12;
  var C13;
  remote_config.RemoteConfigLogLevel = class RemoteConfigLogLevel extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (remote_config.RemoteConfigLogLevel.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = remote_config.RemoteConfigLogLevel.prototype;
  dart.addTypeTests(remote_config.RemoteConfigLogLevel);
  dart.addTypeCaches(remote_config.RemoteConfigLogLevel);
  dart.setMethodSignature(remote_config.RemoteConfigLogLevel, () => ({
    __proto__: dart.getMethods(remote_config.RemoteConfigLogLevel.__proto__),
    toString: dart.fnType(dart.legacy(core.String), []),
    [$toString]: dart.fnType(dart.legacy(core.String), [])
  }));
  dart.setLibraryUri(remote_config.RemoteConfigLogLevel, L1);
  dart.setFieldSignature(remote_config.RemoteConfigLogLevel, () => ({
    __proto__: dart.getFields(remote_config.RemoteConfigLogLevel.__proto__),
    index: dart.finalFieldType(dart.legacy(core.int)),
    [_name$]: dart.finalFieldType(dart.legacy(core.String))
  }));
  dart.defineExtensionMethods(remote_config.RemoteConfigLogLevel, ['toString']);
  remote_config.RemoteConfigLogLevel.debug = C1 || CT.C1;
  remote_config.RemoteConfigLogLevel.error = C2 || CT.C2;
  remote_config.RemoteConfigLogLevel.silent = C3 || CT.C3;
  remote_config.RemoteConfigLogLevel.values = C13 || CT.C13;
  dart.trackLibraries("packages/firebase/src/remote_config.dart", {
    "package:firebase/src/remote_config.dart": remote_config
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["remote_config.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAWqD;;AACjD,UAAI,AAAS,QAAD,IAAI;AACd,cAAO;;AAET,WAAO;WAAS,QAAQ;WAAT;mBAAW,aAAiB,6CAAc,QAAQ,GAAlD;IACjB;;AAOE,YAA4B,sDAAc,AAAS;IACrD;;AAeE,YAAW,qCAAa,iBAAW,AAAS;IAC9C;sBAEuC;AACA,MAArC,AAAS,8BAAgB,YAAM,KAAK;IACtC;;AAKE,UAA6B,aAAzB,AAAS,iCAAkB;AAC7B,cAAO;;AAEP,cAAgB,8CAA2B,AAAS;;IAExD;;AAIE,cAAQ,AAAS;;;AAEb,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,eAAO;AACP,gBAAO;;;IAEb;;AAKqB;AACnB,cAAO,+BAAe,AAAS;MACjC;;;AAG8B;AAC5B,cAAO,iCAAe,AAAS;MACjC;;;AAGkB;AAChB,cAAO,iCAAe,AAAS;MACjC;;;AAK6B;AAC3B,cAAO,+BAAe,AAAS;MACjC;;;AAIQ,iBAAO,wBAAsB,AAAS;AACtC,oBAAU,AAAK,IAAD,gDAChB,QAAS,KAAM,6DAAoC,CAAC,GAAE,2BAAS,CAAC;AACpE,YAAO,+CAA2C,OAAO;IAC3D;eAIuB;AACrB,YAAO,AAAS,0BAAW,GAAG;IAChC;cAIqB;AACnB,YAAO,AAAS,yBAAU,GAAG;IAC/B;cAIwB;AACtB,YAAO,AAAS,yBAAU,GAAG;IAC/B;aAGkC;AAChC,YAAyB,mDAAc,AAAS,uBAAS,GAAG;IAC9D;gBAEsC;AAK3B,MAJT,AAAS,0BAIR,qBAAC,KAAK;IACT;;uDApH8C;AAClC,iEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAVrB,mCAAQ;YAAG;;;;;AAyItB,YAAO,AAAS;IAClB;;AAIE,YAAO,AAAS;IAClB;;AAIE,YAAO,AAAS;IAClB;;AAIE,cAAQ,AAAS;;;AAEb,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,gBAA+B;;;;AAE/B,eAAO;AACP,gBAAO;;;IAEb;;4DAjC4C;AAChC,sEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;;;;;IA6CpC;;+DATK;;;;EASL;;;;;;;;;;;;;;;;;;;;;AAUI,YAAO,sCAAuB,AAAS;IACzC;6BAEkC;AAC0B,MAA1D,AAAS,2CAA6B,AAAM,KAAD;IAC7C;;AAKE,YAAO,sCAAuB,AAAS;IACzC;2BAEgC;AACoB,MAAlD,AAAS,mCAAqB,AAAM,KAAD;IACrC;;+DArBkD;AACtC,yEAAa,QAAQ;;EAAC;;;;;;;;;;;;;;;;;;;;;;IAoCpC;;+DAZK;;;;EAYL;;;;;;;;;;;;;;;;;;;;;;;;IAOA;;4DAJK;;;;EAIL","file":"../../../../../../../../../../packages/firebase/src/remote_config.dart.lib.js"}');
  // Exports:
  return {
    src__remote_config: remote_config
  };
}));

//# sourceMappingURL=remote_config.dart.lib.js.map
