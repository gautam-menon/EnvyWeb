define(['dart_sdk', 'packages/http/http.dart', 'packages/envyweb/Models/UserModel.dart'], (function load__packages__envyweb__Services__ApiFunctions$3720_Admin_dart(dart_sdk, packages__http__http$46dart, packages__envyweb__Models__UserModel$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const convert = dart_sdk.convert;
  const async = dart_sdk.async;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const http = packages__http__http$46dart.http;
  const UserModel = packages__envyweb__Models__UserModel$46dart.Models__UserModel;
  var ApiFunctions$32_Admin = Object.create(dart.library);
  var StringL = () => (StringL = dart.constFn(dart.legacy(core.String)))();
  var IdentityMapOfStringL$StringL = () => (IdentityMapOfStringL$StringL = dart.constFn(_js_helper.IdentityMap$(StringL(), StringL())))();
  var boolL = () => (boolL = dart.constFn(dart.legacy(core.bool)))();
  var IdentityMapOfStringL$boolL = () => (IdentityMapOfStringL$boolL = dart.constFn(_js_helper.IdentityMap$(StringL(), boolL())))();
  var IdentityMapOfStringL$dynamic = () => (IdentityMapOfStringL$dynamic = dart.constFn(_js_helper.IdentityMap$(StringL(), dart.dynamic)))();
  var FutureOrOfboolL = () => (FutureOrOfboolL = dart.constFn(async.FutureOr$(boolL())))();
  var FutureOrLOfboolL = () => (FutureOrLOfboolL = dart.constFn(dart.legacy(FutureOrOfboolL())))();
  var MapOfStringL$dynamic = () => (MapOfStringL$dynamic = dart.constFn(core.Map$(StringL(), dart.dynamic)))();
  var MapLOfStringL$dynamic = () => (MapLOfStringL$dynamic = dart.constFn(dart.legacy(MapOfStringL$dynamic())))();
  var UserModelL = () => (UserModelL = dart.constFn(dart.legacy(UserModel.UserModel)))();
  const CT = Object.create(null);
  var L0 = "package:envyweb/Services/ApiFunctions%20-Admin.dart";
  var baseUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.baseUrl");
  var getAllEditorsUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllEditorsUrl");
  var getAllBasicEditorsUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllBasicEditorsUrl");
  var getAllPremiumEditorsUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllPremiumEditorsUrl");
  var getAllProEditorsUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllProEditorsUrl");
  var assignToEditorUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.assignToEditorUrl");
  var getAllAssignedOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllAssignedOrdersUrl");
  var getAllOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllOrdersUrl");
  var getAllUnassignedOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getAllUnassignedOrdersUrl");
  var getBasicOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getBasicOrdersUrl");
  var getPremiumOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getPremiumOrdersUrl");
  var getProOrdersUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.getProOrdersUrl");
  var addEditorUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.addEditorUrl");
  var addAdminUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.addAdminUrl");
  var loginCheckEditorUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.loginCheckEditorUrl");
  var loginCheckAdminUrl = dart.privateName(ApiFunctions$32_Admin, "ApiFunctionsAdmin.loginCheckAdminUrl");
  ApiFunctions$32_Admin.ApiFunctionsAdmin = class ApiFunctionsAdmin extends core.Object {
    get baseUrl() {
      return this[baseUrl];
    }
    set baseUrl(value) {
      this[baseUrl] = value;
    }
    get getAllEditorsUrl() {
      return this[getAllEditorsUrl];
    }
    set getAllEditorsUrl(value) {
      this[getAllEditorsUrl] = value;
    }
    get getAllBasicEditorsUrl() {
      return this[getAllBasicEditorsUrl];
    }
    set getAllBasicEditorsUrl(value) {
      this[getAllBasicEditorsUrl] = value;
    }
    get getAllPremiumEditorsUrl() {
      return this[getAllPremiumEditorsUrl];
    }
    set getAllPremiumEditorsUrl(value) {
      this[getAllPremiumEditorsUrl] = value;
    }
    get getAllProEditorsUrl() {
      return this[getAllProEditorsUrl];
    }
    set getAllProEditorsUrl(value) {
      this[getAllProEditorsUrl] = value;
    }
    get assignToEditorUrl() {
      return this[assignToEditorUrl];
    }
    set assignToEditorUrl(value) {
      this[assignToEditorUrl] = value;
    }
    get getAllAssignedOrdersUrl() {
      return this[getAllAssignedOrdersUrl];
    }
    set getAllAssignedOrdersUrl(value) {
      this[getAllAssignedOrdersUrl] = value;
    }
    get getAllOrdersUrl() {
      return this[getAllOrdersUrl];
    }
    set getAllOrdersUrl(value) {
      this[getAllOrdersUrl] = value;
    }
    get getAllUnassignedOrdersUrl() {
      return this[getAllUnassignedOrdersUrl];
    }
    set getAllUnassignedOrdersUrl(value) {
      this[getAllUnassignedOrdersUrl] = value;
    }
    get getBasicOrdersUrl() {
      return this[getBasicOrdersUrl];
    }
    set getBasicOrdersUrl(value) {
      this[getBasicOrdersUrl] = value;
    }
    get getPremiumOrdersUrl() {
      return this[getPremiumOrdersUrl];
    }
    set getPremiumOrdersUrl(value) {
      this[getPremiumOrdersUrl] = value;
    }
    get getProOrdersUrl() {
      return this[getProOrdersUrl];
    }
    set getProOrdersUrl(value) {
      this[getProOrdersUrl] = value;
    }
    get addEditorUrl() {
      return this[addEditorUrl];
    }
    set addEditorUrl(value) {
      this[addEditorUrl] = value;
    }
    get addAdminUrl() {
      return this[addAdminUrl];
    }
    set addAdminUrl(value) {
      this[addAdminUrl] = value;
    }
    get loginCheckEditorUrl() {
      return this[loginCheckEditorUrl];
    }
    set loginCheckEditorUrl(value) {
      this[loginCheckEditorUrl] = value;
    }
    get loginCheckAdminUrl() {
      return this[loginCheckAdminUrl];
    }
    set loginCheckAdminUrl(value) {
      this[loginCheckAdminUrl] = value;
    }
    addEditor(name, email, password, tier, phoneNo) {
      return async.async(dart.dynamic, (function* addEditor() {
        let body = new (IdentityMapOfStringL$StringL()).from(["name", name, "password", password, "email", email, "tier", tier, "phoneNo", phoneNo]);
        core.print(body);
        let response = (yield http.post(this.addEditorUrl, {body: body}));
        core.print(response);
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          return data;
        } else {
          return new (IdentityMapOfStringL$boolL()).from(["status", false]);
        }
      }).bind(this));
    }
    addAdmin(name, email, password, phoneNo) {
      return async.async(dart.dynamic, (function* addAdmin() {
        let body = new (IdentityMapOfStringL$StringL()).from(["name", name, "email", email, "phoneNo", phoneNo, "password", password]);
        core.print(body);
        let response = (yield http.post(this.addAdminUrl, {body: body}));
        core.print(response);
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          return data;
        } else {
          return new (IdentityMapOfStringL$boolL()).from(["status", false]);
        }
      }).bind(this));
    }
    getAllEditors() {
      return async.async(dart.dynamic, (function* getAllEditors() {
        let response = (yield http.get(this.getAllEditorsUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["req"]);
          }
        }
      }).bind(this));
    }
    getAllBasicEditors() {
      return async.async(dart.dynamic, (function* getAllBasicEditors() {
        let response = (yield http.get(this.getAllBasicEditorsUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["req"]);
          }
        }
      }).bind(this));
    }
    getAllPremiumEditors() {
      return async.async(dart.dynamic, (function* getAllPremiumEditors() {
        let response = (yield http.get(this.getAllPremiumEditorsUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["req"]);
          }
        }
      }).bind(this));
    }
    getAllProEditors() {
      return async.async(dart.dynamic, (function* getAllProEditors() {
        let response = (yield http.get(this.getAllProEditorsUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["req"]);
          }
        }
      }).bind(this));
    }
    assignToEditor(uid, orderID, tier) {
      return async.async(boolL(), (function* assignToEditor() {
        let body = new (IdentityMapOfStringL$dynamic()).from(["uid", uid, "orderID", orderID, "tier", tier]);
        let response = (yield http.post(this.assignToEditorUrl, {body: body, headers: new (IdentityMapOfStringL$StringL()).from(["Content-Type", "application/json"])}));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          return FutureOrLOfboolL().as(dart.dsend(data, '_get', ["status"]));
        } else {
          return false;
        }
      }).bind(this));
    }
    getAllAssignedOrders() {
      return async.async(dart.dynamic, (function* getAllAssignedOrders() {
        let response = (yield http.get(this.getAllAssignedOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    getAllOrders() {
      return async.async(dart.dynamic, (function* getAllOrders() {
        let response = (yield http.get(this.getAllOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    getAllUnassignedOrders() {
      return async.async(dart.dynamic, (function* getAllUnassignedOrders() {
        let response = (yield http.get(this.getAllUnassignedOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    getBasicOrders() {
      return async.async(dart.dynamic, (function* getBasicOrders() {
        let response = (yield http.get(this.getBasicOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    getPremiumOrders() {
      return async.async(dart.dynamic, (function* getPremiumOrders() {
        let response = (yield http.get(this.getPremiumOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    getProOrders() {
      return async.async(dart.dynamic, (function* getProOrders() {
        let response = (yield http.get(this.getProOrdersUrl));
        if (response.statusCode === 200) {
          let data = convert.json.decode(response.body);
          core.print(data);
          if (dart.equals(dart.dsend(data, '_get', ["status"]), false)) {
            return false;
          } else {
            return dart.dsend(data, '_get', ["data"]);
          }
        }
      }).bind(this));
    }
    loginCheckEditor(uid) {
      return async.async(UserModelL(), (function* loginCheckEditor() {
        let response = (yield http.post(this.loginCheckEditorUrl, {body: new (IdentityMapOfStringL$StringL()).from(["editorId", uid])}));
        if (response.statusCode === 200) {
          let temp = convert.json.decode(response.body);
          if (dart.equals(dart.dsend(temp, '_get', ["status"]), true)) {
            let data = new UserModel.UserModel.fromJson(MapLOfStringL$dynamic().as(dart.dsend(temp, '_get', ["req"])));
            return data;
          } else {
            return null;
          }
        } else {
          return null;
        }
      }).bind(this));
    }
    loginCheckAdmin(uid) {
      return async.async(UserModelL(), (function* loginCheckAdmin() {
        let response = (yield http.post(this.loginCheckAdminUrl, {body: new (IdentityMapOfStringL$StringL()).from(["editorId", uid])}));
        if (response.statusCode === 200) {
          let temp = convert.json.decode(response.body);
          if (dart.equals(dart.dsend(temp, '_get', ["status"]), true)) {
            let data = new UserModel.UserModel.fromJson(MapLOfStringL$dynamic().as(dart.dsend(temp, '_get', ["req"])));
            return data;
          } else {
            return null;
          }
        } else {
          return null;
        }
      }).bind(this));
    }
  };
  (ApiFunctions$32_Admin.ApiFunctionsAdmin.new = function() {
    this[baseUrl] = "https://envytestserver.herokuapp.com";
    this[getAllEditorsUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllEditors";
    this[getAllBasicEditorsUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllBasicEditors";
    this[getAllPremiumEditorsUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllPremiumEditors";
    this[getAllProEditorsUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllProEditors";
    this[assignToEditorUrl] = "https://envytestserver.herokuapp.com/AdminPage/AssignToEditor";
    this[getAllAssignedOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllAssignedOrders";
    this[getAllOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllOrders";
    this[getAllUnassignedOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetAllUnassignedOrders";
    this[getBasicOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetBasicOrders";
    this[getPremiumOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetPremiumOrders";
    this[getProOrdersUrl] = "https://envytestserver.herokuapp.com/AdminPage/GetProOrders";
    this[addEditorUrl] = "https://envytestserver.herokuapp.com/AdminPage/AddEditor";
    this[addAdminUrl] = "https://envytestserver.herokuapp.com/AdminPage/AddAdmin";
    this[loginCheckEditorUrl] = "https://envytestserver.herokuapp.com/AdminPage/loginCheckEditor";
    this[loginCheckAdminUrl] = "https://envytestserver.herokuapp.com/AdminPage/loginCheckAdmin";
    ;
  }).prototype = ApiFunctions$32_Admin.ApiFunctionsAdmin.prototype;
  dart.addTypeTests(ApiFunctions$32_Admin.ApiFunctionsAdmin);
  dart.addTypeCaches(ApiFunctions$32_Admin.ApiFunctionsAdmin);
  dart.setMethodSignature(ApiFunctions$32_Admin.ApiFunctionsAdmin, () => ({
    __proto__: dart.getMethods(ApiFunctions$32_Admin.ApiFunctionsAdmin.__proto__),
    addEditor: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String), dart.legacy(core.String), dart.legacy(core.String), dart.legacy(core.String), dart.legacy(core.String)]),
    addAdmin: dart.fnType(dart.legacy(async.Future), [dart.legacy(core.String), dart.legacy(core.String), dart.legacy(core.String), dart.legacy(core.String)]),
    getAllEditors: dart.fnType(dart.legacy(async.Future), []),
    getAllBasicEditors: dart.fnType(dart.legacy(async.Future), []),
    getAllPremiumEditors: dart.fnType(dart.legacy(async.Future), []),
    getAllProEditors: dart.fnType(dart.legacy(async.Future), []),
    assignToEditor: dart.fnType(dart.legacy(async.Future$(dart.legacy(core.bool))), [dart.legacy(core.String), dart.dynamic, dart.dynamic]),
    getAllAssignedOrders: dart.fnType(dart.legacy(async.Future), []),
    getAllOrders: dart.fnType(dart.legacy(async.Future), []),
    getAllUnassignedOrders: dart.fnType(dart.legacy(async.Future), []),
    getBasicOrders: dart.fnType(dart.legacy(async.Future), []),
    getPremiumOrders: dart.fnType(dart.legacy(async.Future), []),
    getProOrders: dart.fnType(dart.legacy(async.Future), []),
    loginCheckEditor: dart.fnType(dart.legacy(async.Future$(dart.legacy(UserModel.UserModel))), [dart.legacy(core.String)]),
    loginCheckAdmin: dart.fnType(dart.legacy(async.Future$(dart.legacy(UserModel.UserModel))), [dart.legacy(core.String)])
  }));
  dart.setLibraryUri(ApiFunctions$32_Admin.ApiFunctionsAdmin, L0);
  dart.setFieldSignature(ApiFunctions$32_Admin.ApiFunctionsAdmin, () => ({
    __proto__: dart.getFields(ApiFunctions$32_Admin.ApiFunctionsAdmin.__proto__),
    baseUrl: dart.fieldType(dart.legacy(core.String)),
    getAllEditorsUrl: dart.fieldType(dart.legacy(core.String)),
    getAllBasicEditorsUrl: dart.fieldType(dart.legacy(core.String)),
    getAllPremiumEditorsUrl: dart.fieldType(dart.legacy(core.String)),
    getAllProEditorsUrl: dart.fieldType(dart.legacy(core.String)),
    assignToEditorUrl: dart.fieldType(dart.legacy(core.String)),
    getAllAssignedOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    getAllOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    getAllUnassignedOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    getBasicOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    getPremiumOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    getProOrdersUrl: dart.fieldType(dart.legacy(core.String)),
    addEditorUrl: dart.fieldType(dart.legacy(core.String)),
    addAdminUrl: dart.fieldType(dart.legacy(core.String)),
    loginCheckEditorUrl: dart.fieldType(dart.legacy(core.String)),
    loginCheckAdminUrl: dart.fieldType(dart.legacy(core.String))
  }));
  dart.trackLibraries("packages/envyweb/Services/ApiFunctions%20-Admin.dart", {
    "package:envyweb/Services/ApiFunctions%20-Admin.dart": ApiFunctions$32_Admin
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["ApiFunctions%2520-Admin.dart"],"names":[],"mappings":"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","file":"../../../../../../../packages/envyweb/Services/ApiFunctions%2520-Admin.dart.lib.js"}');
  // Exports:
  return {
    Services__ApiFunctions$32_Admin: ApiFunctions$32_Admin
  };
}));

//# sourceMappingURL=ApiFunctions%20-Admin.dart.lib.js.map
