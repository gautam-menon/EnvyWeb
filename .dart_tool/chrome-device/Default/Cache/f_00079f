define(['dart_sdk', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/foundation/object.dart'], (function load__packages__flutter__src__widgets__async_dart(dart_sdk, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__foundation__object$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const object = packages__flutter__src__foundation__object$46dart.src__foundation__object;
  var async$ = Object.create(dart.library);
  var VoidTovoid = () => (VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))();
  var ObjectToNull = () => (ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))();
  var ConnectionStateL = () => (ConnectionStateL = dart.constFn(dart.legacy(async$.ConnectionState)))();
  const CT = Object.create(null);
  var L0 = "file:///C:/Users/HP/Downloads/flutter/packages/flutter/lib/src/widgets/async.dart";
  var L1 = "package:flutter/src/widgets/async.dart";
  dart.defineLazy(CT, {
    get C0() {
      return C0 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$]: "ConnectionState.none",
        index: 0
      });
    },
    get C1() {
      return C1 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$]: "ConnectionState.waiting",
        index: 1
      });
    },
    get C2() {
      return C2 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$]: "ConnectionState.active",
        index: 2
      });
    },
    get C3() {
      return C3 = dart.const({
        __proto__: async$.ConnectionState.prototype,
        [_name$]: "ConnectionState.done",
        index: 3
      });
    },
    get C4() {
      return C4 = dart.constList([C0 || CT.C0, C1 || CT.C1, C2 || CT.C2, C3 || CT.C3], ConnectionStateL());
    }
  }, false);
  const _is_StreamBuilderBase_default = Symbol('_is_StreamBuilderBase_default');
  var stream$ = dart.privateName(async$, "StreamBuilderBase.stream");
  async$.StreamBuilderBase$ = dart.generic((T, S) => {
    var _StreamBuilderBaseStateOfT$S = () => (_StreamBuilderBaseStateOfT$S = dart.constFn(async$._StreamBuilderBaseState$(T, S)))();
    class StreamBuilderBase extends framework.StatefulWidget {
      get stream() {
        return this[stream$];
      }
      set stream(value) {
        super.stream = value;
      }
      afterConnected(current) {
        S.as(current);
        return current;
      }
      afterError(current, error) {
        S.as(current);
        if (error == null) dart.nullFailed(L0, 81, 34, "error");
        return current;
      }
      afterDone(current) {
        S.as(current);
        return current;
      }
      afterDisconnected(current) {
        S.as(current);
        return current;
      }
      createState() {
        return new (_StreamBuilderBaseStateOfT$S()).new();
      }
    }
    (StreamBuilderBase.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[stream$] = stream;
      StreamBuilderBase.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilderBase.prototype;
    dart.addTypeTests(StreamBuilderBase);
    StreamBuilderBase.prototype[_is_StreamBuilderBase_default] = true;
    dart.addTypeCaches(StreamBuilderBase);
    dart.setMethodSignature(StreamBuilderBase, () => ({
      __proto__: dart.getMethods(StreamBuilderBase.__proto__),
      afterConnected: dart.fnType(S, [dart.nullable(core.Object)]),
      afterError: dart.fnType(S, [dart.nullable(core.Object), core.Object]),
      afterDone: dart.fnType(S, [dart.nullable(core.Object)]),
      afterDisconnected: dart.fnType(S, [dart.nullable(core.Object)]),
      createState: dart.fnType(framework.State$(async$.StreamBuilderBase$(T, S)), [])
    }));
    dart.setLibraryUri(StreamBuilderBase, L1);
    dart.setFieldSignature(StreamBuilderBase, () => ({
      __proto__: dart.getFields(StreamBuilderBase.__proto__),
      stream: dart.finalFieldType(dart.nullable(async.Stream$(T)))
    }));
    return StreamBuilderBase;
  });
  async$.StreamBuilderBase = async$.StreamBuilderBase$();
  dart.addTypeTests(async$.StreamBuilderBase, _is_StreamBuilderBase_default);
  var _subscription = dart.privateName(async$, "_subscription");
  var ___StreamBuilderBaseState__summary = dart.privateName(async$, "_#_StreamBuilderBaseState#_summary");
  var ___StreamBuilderBaseState__summary_isSet = dart.privateName(async$, "_#_StreamBuilderBaseState#_summary#isSet");
  var _summary = dart.privateName(async$, "_summary");
  var _subscribe = dart.privateName(async$, "_subscribe");
  var _unsubscribe = dart.privateName(async$, "_unsubscribe");
  const _is__StreamBuilderBaseState_default = Symbol('_is__StreamBuilderBaseState_default');
  async$._StreamBuilderBaseState$ = dart.generic((T, S) => {
    var StreamBuilderBaseOfT$S = () => (StreamBuilderBaseOfT$S = dart.constFn(async$.StreamBuilderBase$(T, S)))();
    var TTovoid = () => (TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class _StreamBuilderBaseState extends framework.State$(async$.StreamBuilderBase$(T, S)) {
      get [_summary]() {
        let t0;
        return dart.test(this[___StreamBuilderBaseState__summary_isSet]) ? (t0 = this[___StreamBuilderBaseState__summary], t0) : dart.throw(new _internal.LateError.fieldNI("_summary"));
      }
      set [_summary](t0) {
        this[___StreamBuilderBaseState__summary_isSet] = true;
        this[___StreamBuilderBaseState__summary] = t0;
      }
      initState() {
        super.initState();
        this[_summary] = this.widget.initial();
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        StreamBuilderBaseOfT$S().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L0, 115, 48, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.stream, this.widget.stream)) {
          if (this[_subscription] != null) {
            this[_unsubscribe]();
            this[_summary] = this.widget.afterDisconnected(this[_summary]);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        if (context == null) dart.nullFailed(L0, 127, 29, "context");
        return this.widget.build(context, this[_summary]);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.stream != null) {
          this[_subscription] = dart.nullCheck(this.widget.stream).listen(dart.fn(data => {
            this.setState(dart.fn(() => {
              this[_summary] = this.widget.afterData(this[_summary], data);
            }, VoidTovoid()));
          }, TTovoid()), {onError: dart.fn(error => {
              if (error == null) dart.nullFailed(L0, 141, 27, "error");
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterError(this[_summary], error);
              }, VoidTovoid()));
            }, ObjectToNull()), onDone: dart.fn(() => {
              this.setState(dart.fn(() => {
                this[_summary] = this.widget.afterDone(this[_summary]);
              }, VoidTovoid()));
            }, VoidTovoid())});
          this[_summary] = this.widget.afterConnected(this[_summary]);
        }
      }
      [_unsubscribe]() {
        if (this[_subscription] != null) {
          dart.nullCheck(this[_subscription]).cancel();
          this[_subscription] = null;
        }
      }
    }
    (_StreamBuilderBaseState.new = function() {
      this[_subscription] = null;
      this[___StreamBuilderBaseState__summary] = null;
      this[___StreamBuilderBaseState__summary_isSet] = false;
      _StreamBuilderBaseState.__proto__.new.call(this);
      ;
    }).prototype = _StreamBuilderBaseState.prototype;
    dart.addTypeTests(_StreamBuilderBaseState);
    _StreamBuilderBaseState.prototype[_is__StreamBuilderBaseState_default] = true;
    dart.addTypeCaches(_StreamBuilderBaseState);
    dart.setMethodSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getMethods(_StreamBuilderBaseState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getGetters(_StreamBuilderBaseState.__proto__),
      [_summary]: S
    }));
    dart.setSetterSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getSetters(_StreamBuilderBaseState.__proto__),
      [_summary]: S
    }));
    dart.setLibraryUri(_StreamBuilderBaseState, L1);
    dart.setFieldSignature(_StreamBuilderBaseState, () => ({
      __proto__: dart.getFields(_StreamBuilderBaseState.__proto__),
      [_subscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(T))),
      [___StreamBuilderBaseState__summary]: dart.fieldType(dart.nullable(S)),
      [___StreamBuilderBaseState__summary_isSet]: dart.fieldType(core.bool)
    }));
    return _StreamBuilderBaseState;
  });
  async$._StreamBuilderBaseState = async$._StreamBuilderBaseState$();
  dart.addTypeTests(async$._StreamBuilderBaseState, _is__StreamBuilderBaseState_default);
  var _name$ = dart.privateName(async$, "_name");
  var C0;
  var C1;
  var C2;
  var C3;
  var C4;
  async$.ConnectionState = class ConnectionState extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (async$.ConnectionState.new = function(index, _name) {
    if (index == null) dart.nullFailed(L0, 176, 6, "index");
    if (_name == null) dart.nullFailed(L0, 176, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = async$.ConnectionState.prototype;
  dart.addTypeTests(async$.ConnectionState);
  dart.addTypeCaches(async$.ConnectionState);
  dart.setLibraryUri(async$.ConnectionState, L1);
  dart.setFieldSignature(async$.ConnectionState, () => ({
    __proto__: dart.getFields(async$.ConnectionState.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(async$.ConnectionState, ['toString']);
  async$.ConnectionState.none = C0 || CT.C0;
  async$.ConnectionState.waiting = C1 || CT.C1;
  async$.ConnectionState.active = C2 || CT.C2;
  async$.ConnectionState.done = C3 || CT.C3;
  async$.ConnectionState.values = C4 || CT.C4;
  const _is_AsyncSnapshot_default = Symbol('_is_AsyncSnapshot_default');
  var connectionState$ = dart.privateName(async$, "AsyncSnapshot.connectionState");
  var data$ = dart.privateName(async$, "AsyncSnapshot.data");
  var error$ = dart.privateName(async$, "AsyncSnapshot.error");
  async$.AsyncSnapshot$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class AsyncSnapshot extends core.Object {
      get connectionState() {
        return this[connectionState$];
      }
      set connectionState(value) {
        super.connectionState = value;
      }
      get data() {
        return this[data$];
      }
      set data(value) {
        super.data = value;
      }
      get error() {
        return this[error$];
      }
      set error(value) {
        super.error = value;
      }
      get requireData() {
        if (dart.test(this.hasData)) return dart.nullCheck(this.data);
        if (dart.test(this.hasError)) dart.throw(dart.nullCheck(this.error));
        dart.throw(new core.StateError.new("Snapshot has neither data nor error"));
      }
      inState(state) {
        if (state == null) dart.nullFailed(L0, 261, 44, "state");
        return new (AsyncSnapshotOfT()).__(state, this.data, this.error);
      }
      get hasData() {
        return this.data != null;
      }
      get hasError() {
        return this.error != null;
      }
      toString() {
        return dart.str(object.objectRuntimeType(this, "AsyncSnapshot")) + "(" + dart.str(this.connectionState) + ", " + dart.str(this.data) + ", " + dart.str(this.error) + ")";
      }
      _equals(other) {
        if (other == null) return false;
        if (this === other) return true;
        return AsyncSnapshotOfT().is(other) && dart.equals(other.connectionState, this.connectionState) && dart.equals(other.data, this.data) && dart.equals(other.error, this.error);
      }
      get hashCode() {
        return ui.hashValues(this.connectionState, this.data, this.error);
      }
    }
    (AsyncSnapshot.__ = function(connectionState, data, error) {
      if (connectionState == null) dart.nullFailed(L0, 208, 30, "connectionState");
      this[connectionState$] = connectionState;
      this[data$] = data;
      this[error$] = error;
      if (!(connectionState != null)) dart.assertFailed(null, L0, 209, 14, "connectionState != null");
      if (!!(data != null && error != null)) dart.assertFailed(null, L0, 210, 14, "!(data != null && error != null)");
      ;
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.nothing = function() {
      AsyncSnapshot.__.call(this, async$.ConnectionState.none, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.waiting = function() {
      AsyncSnapshot.__.call(this, async$.ConnectionState.waiting, null, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withData = function(state, data) {
      if (state == null) dart.nullFailed(L0, 219, 48, "state");
      AsyncSnapshot.__.call(this, state, data, null);
    }).prototype = AsyncSnapshot.prototype;
    (AsyncSnapshot.withError = function(state, error) {
      if (state == null) dart.nullFailed(L0, 222, 49, "state");
      if (error == null) dart.nullFailed(L0, 222, 63, "error");
      AsyncSnapshot.__.call(this, state, null, error);
    }).prototype = AsyncSnapshot.prototype;
    dart.addTypeTests(AsyncSnapshot);
    AsyncSnapshot.prototype[_is_AsyncSnapshot_default] = true;
    dart.addTypeCaches(AsyncSnapshot);
    dart.setMethodSignature(AsyncSnapshot, () => ({
      __proto__: dart.getMethods(AsyncSnapshot.__proto__),
      inState: dart.fnType(async$.AsyncSnapshot$(T), [async$.ConnectionState])
    }));
    dart.setGetterSignature(AsyncSnapshot, () => ({
      __proto__: dart.getGetters(AsyncSnapshot.__proto__),
      requireData: T,
      hasData: core.bool,
      hasError: core.bool
    }));
    dart.setLibraryUri(AsyncSnapshot, L1);
    dart.setFieldSignature(AsyncSnapshot, () => ({
      __proto__: dart.getFields(AsyncSnapshot.__proto__),
      connectionState: dart.finalFieldType(async$.ConnectionState),
      data: dart.finalFieldType(dart.nullable(T)),
      error: dart.finalFieldType(dart.nullable(core.Object))
    }));
    dart.defineExtensionMethods(AsyncSnapshot, ['toString', '_equals']);
    dart.defineExtensionAccessors(AsyncSnapshot, ['hashCode']);
    return AsyncSnapshot;
  });
  async$.AsyncSnapshot = async$.AsyncSnapshot$();
  dart.addTypeTests(async$.AsyncSnapshot, _is_AsyncSnapshot_default);
  const _is_StreamBuilder_default = Symbol('_is_StreamBuilder_default');
  var builder$ = dart.privateName(async$, "StreamBuilder.builder");
  var initialData$ = dart.privateName(async$, "StreamBuilder.initialData");
  async$.StreamBuilder$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    class StreamBuilder extends async$.StreamBuilderBase$(T, async$.AsyncSnapshot$(T)) {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$];
      }
      set initialData(value) {
        super.initialData = value;
      }
      initial() {
        return this.initialData == null ? new (AsyncSnapshotOfT()).nothing() : new (AsyncSnapshotOfT()).withData(async$.ConnectionState.none, T.as(this.initialData));
      }
      afterConnected(current) {
        AsyncSnapshotOfT().as(current);
        if (current == null) dart.nullFailed(L0, 506, 52, "current");
        return current.inState(async$.ConnectionState.waiting);
      }
      afterData(current, data) {
        AsyncSnapshotOfT().as(current);
        if (current == null) dart.nullFailed(L0, 509, 47, "current");
        T.as(data);
        return new (AsyncSnapshotOfT()).withData(async$.ConnectionState.active, data);
      }
      afterError(current, error) {
        AsyncSnapshotOfT().as(current);
        if (current == null) dart.nullFailed(L0, 514, 48, "current");
        if (error == null) dart.nullFailed(L0, 514, 64, "error");
        return new (AsyncSnapshotOfT()).withError(async$.ConnectionState.active, error);
      }
      afterDone(current) {
        AsyncSnapshotOfT().as(current);
        if (current == null) dart.nullFailed(L0, 519, 47, "current");
        return current.inState(async$.ConnectionState.done);
      }
      afterDisconnected(current) {
        AsyncSnapshotOfT().as(current);
        if (current == null) dart.nullFailed(L0, 522, 55, "current");
        return current.inState(async$.ConnectionState.none);
      }
      build(context, currentSummary) {
        let t2, t1;
        if (context == null) dart.nullFailed(L0, 525, 29, "context");
        AsyncSnapshotOfT().as(currentSummary);
        if (currentSummary == null) dart.nullFailed(L0, 525, 55, "currentSummary");
        t1 = context;
        t2 = currentSummary;
        return this.builder(t1, t2);
      }
    }
    (StreamBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let stream = opts && 'stream' in opts ? opts.stream : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(L0, 480, 19, "builder");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[initialData$] = initialData;
      this[builder$] = builder;
      if (!(builder != null)) dart.assertFailed(null, L0, 481, 15, "builder != null");
      StreamBuilder.__proto__.new.call(this, {key: key, stream: stream, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = StreamBuilder.prototype;
    dart.addTypeTests(StreamBuilder);
    StreamBuilder.prototype[_is_StreamBuilder_default] = true;
    dart.addTypeCaches(StreamBuilder);
    dart.setMethodSignature(StreamBuilder, () => ({
      __proto__: dart.getMethods(StreamBuilder.__proto__),
      initial: dart.fnType(async$.AsyncSnapshot$(T), []),
      afterData: dart.fnType(async$.AsyncSnapshot$(T), [dart.nullable(core.Object), dart.nullable(core.Object)]),
      build: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(StreamBuilder, L1);
    dart.setFieldSignature(StreamBuilder, () => ({
      __proto__: dart.getFields(StreamBuilder.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(dart.nullable(T))
    }));
    return StreamBuilder;
  });
  async$.StreamBuilder = async$.StreamBuilder$();
  dart.addTypeTests(async$.StreamBuilder, _is_StreamBuilder_default);
  const _is_FutureBuilder_default = Symbol('_is_FutureBuilder_default');
  var future$ = dart.privateName(async$, "FutureBuilder.future");
  var builder$0 = dart.privateName(async$, "FutureBuilder.builder");
  var initialData$0 = dart.privateName(async$, "FutureBuilder.initialData");
  async$.FutureBuilder$ = dart.generic(T => {
    var _FutureBuilderStateOfT = () => (_FutureBuilderStateOfT = dart.constFn(async$._FutureBuilderState$(T)))();
    class FutureBuilder extends framework.StatefulWidget {
      get future() {
        return this[future$];
      }
      set future(value) {
        super.future = value;
      }
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      get initialData() {
        return this[initialData$0];
      }
      set initialData(value) {
        super.initialData = value;
      }
      createState() {
        return new (_FutureBuilderStateOfT()).new();
      }
    }
    (FutureBuilder.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let future = opts && 'future' in opts ? opts.future : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      if (builder == null) dart.nullFailed(L0, 674, 19, "builder");
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[future$] = future;
      this[initialData$0] = initialData;
      this[builder$0] = builder;
      if (!(builder != null)) dart.assertFailed(null, L0, 675, 15, "builder != null");
      FutureBuilder.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = FutureBuilder.prototype;
    dart.addTypeTests(FutureBuilder);
    FutureBuilder.prototype[_is_FutureBuilder_default] = true;
    dart.addTypeCaches(FutureBuilder);
    dart.setMethodSignature(FutureBuilder, () => ({
      __proto__: dart.getMethods(FutureBuilder.__proto__),
      createState: dart.fnType(framework.State$(async$.FutureBuilder$(T)), [])
    }));
    dart.setLibraryUri(FutureBuilder, L1);
    dart.setFieldSignature(FutureBuilder, () => ({
      __proto__: dart.getFields(FutureBuilder.__proto__),
      future: dart.finalFieldType(dart.nullable(async.Future$(T))),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, async$.AsyncSnapshot$(T)])),
      initialData: dart.finalFieldType(dart.nullable(T))
    }));
    return FutureBuilder;
  });
  async$.FutureBuilder = async$.FutureBuilder$();
  dart.addTypeTests(async$.FutureBuilder, _is_FutureBuilder_default);
  var _activeCallbackIdentity = dart.privateName(async$, "_activeCallbackIdentity");
  var ___FutureBuilderState__snapshot = dart.privateName(async$, "_#_FutureBuilderState#_snapshot");
  var ___FutureBuilderState__snapshot_isSet = dart.privateName(async$, "_#_FutureBuilderState#_snapshot#isSet");
  var _snapshot = dart.privateName(async$, "_snapshot");
  const _is__FutureBuilderState_default = Symbol('_is__FutureBuilderState_default');
  async$._FutureBuilderState$ = dart.generic(T => {
    var AsyncSnapshotOfT = () => (AsyncSnapshotOfT = dart.constFn(async$.AsyncSnapshot$(T)))();
    var FutureBuilderOfT = () => (FutureBuilderOfT = dart.constFn(async$.FutureBuilder$(T)))();
    var BuildContextAndAsyncSnapshotOfTToWidget = () => (BuildContextAndAsyncSnapshotOfTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, AsyncSnapshotOfT()])))();
    var TToNull = () => (TToNull = dart.constFn(dart.fnType(core.Null, [T])))();
    class _FutureBuilderState extends framework.State$(async$.FutureBuilder$(T)) {
      get [_snapshot]() {
        let t1;
        return dart.test(this[___FutureBuilderState__snapshot_isSet]) ? (t1 = this[___FutureBuilderState__snapshot], t1) : dart.throw(new _internal.LateError.fieldNI("_snapshot"));
      }
      set [_snapshot](t1) {
        if (t1 == null) dart.nullFailed(L0, 729, 25, "null");
        this[___FutureBuilderState__snapshot_isSet] = true;
        this[___FutureBuilderState__snapshot] = t1;
      }
      initState() {
        super.initState();
        this[_snapshot] = this.widget.initialData == null ? new (AsyncSnapshotOfT()).nothing() : new (AsyncSnapshotOfT()).withData(async$.ConnectionState.none, T.as(this.widget.initialData));
        this[_subscribe]();
      }
      didUpdateWidget(oldWidget) {
        FutureBuilderOfT().as(oldWidget);
        if (oldWidget == null) dart.nullFailed(L0, 741, 41, "oldWidget");
        super.didUpdateWidget(oldWidget);
        if (!dart.equals(oldWidget.future, this.widget.future)) {
          if (this[_activeCallbackIdentity] != null) {
            this[_unsubscribe]();
            this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.none);
          }
          this[_subscribe]();
        }
      }
      build(context) {
        let t4, t3, t2;
        if (context == null) dart.nullFailed(L0, 753, 29, "context");
        t2 = this.widget;
        t3 = context;
        t4 = this[_snapshot];
        return BuildContextAndAsyncSnapshotOfTToWidget().as(t2.builder)(t3, t4);
      }
      dispose() {
        this[_unsubscribe]();
        super.dispose();
      }
      [_subscribe]() {
        if (this.widget.future != null) {
          let callbackIdentity = new core.Object.new();
          this[_activeCallbackIdentity] = callbackIdentity;
          dart.nullCheck(this.widget.future).then(dart.void, dart.fn(data => {
            if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
              this.setState(dart.fn(() => {
                this[_snapshot] = new (AsyncSnapshotOfT()).withData(async$.ConnectionState.done, data);
              }, VoidTovoid()));
            }
          }, TToNull()), {onError: dart.fn(error => {
              if (error == null) dart.nullFailed(L0, 771, 27, "error");
              if (dart.equals(this[_activeCallbackIdentity], callbackIdentity)) {
                this.setState(dart.fn(() => {
                  this[_snapshot] = new (AsyncSnapshotOfT()).withError(async$.ConnectionState.done, error);
                }, VoidTovoid()));
              }
            }, ObjectToNull())});
          this[_snapshot] = this[_snapshot].inState(async$.ConnectionState.waiting);
        }
      }
      [_unsubscribe]() {
        this[_activeCallbackIdentity] = null;
      }
    }
    (_FutureBuilderState.new = function() {
      this[_activeCallbackIdentity] = null;
      this[___FutureBuilderState__snapshot] = null;
      this[___FutureBuilderState__snapshot_isSet] = false;
      _FutureBuilderState.__proto__.new.call(this);
      ;
    }).prototype = _FutureBuilderState.prototype;
    dart.addTypeTests(_FutureBuilderState);
    _FutureBuilderState.prototype[_is__FutureBuilderState_default] = true;
    dart.addTypeCaches(_FutureBuilderState);
    dart.setMethodSignature(_FutureBuilderState, () => ({
      __proto__: dart.getMethods(_FutureBuilderState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_subscribe]: dart.fnType(dart.void, []),
      [_unsubscribe]: dart.fnType(dart.void, [])
    }));
    dart.setGetterSignature(_FutureBuilderState, () => ({
      __proto__: dart.getGetters(_FutureBuilderState.__proto__),
      [_snapshot]: async$.AsyncSnapshot$(T)
    }));
    dart.setSetterSignature(_FutureBuilderState, () => ({
      __proto__: dart.getSetters(_FutureBuilderState.__proto__),
      [_snapshot]: async$.AsyncSnapshot$(T)
    }));
    dart.setLibraryUri(_FutureBuilderState, L1);
    dart.setFieldSignature(_FutureBuilderState, () => ({
      __proto__: dart.getFields(_FutureBuilderState.__proto__),
      [_activeCallbackIdentity]: dart.fieldType(dart.nullable(core.Object)),
      [___FutureBuilderState__snapshot]: dart.fieldType(dart.nullable(async$.AsyncSnapshot$(T))),
      [___FutureBuilderState__snapshot_isSet]: dart.fieldType(core.bool)
    }));
    return _FutureBuilderState;
  });
  async$._FutureBuilderState = async$._FutureBuilderState$();
  dart.addTypeTests(async$._FutureBuilderState, _is__FutureBuilderState_default);
  dart.trackLibraries("packages/flutter/src/widgets/async.dart", {
    "package:flutter/src/widgets/async.dart": async$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["async.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwDmB;;;;;;;aAaE;AAAY,sBAAO;;iBAWvB,SAAgB;aAAhB;YAAgB;AAAU,sBAAO;;;aAMlC;AAAY,sBAAO;;;aAMX;AAAY,sBAAO;;;AAMO;MAA+B;;;UAhDhD;UAAU;;;AAAY,uDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsD7D;MAAQ;;AAAR;;MAAQ;;AAII,QAAX;AACqB,QAA3B,iBAAW,AAAO;AACN,QAAZ;MACF;;oCAG6C;;AACX,QAA1B,sBAAgB,SAAS;AAC/B,yBAAI,AAAU,SAAD,SAAW,AAAO;AAC7B,cAAI,uBAAiB;AACL,YAAd;AAC6C,YAA7C,iBAAW,AAAO,8BAAkB;;AAE1B,UAAZ;;MAEJ;;YAG0B;AAAY,cAAA,AAAO,mBAAM,OAAO,EAAE;MAAS;;AAIrD,QAAd;AACe,QAAT;MACR;;AAGE,YAAI,AAAO,sBAAU;AAajB,UAZF,sBAA6B,AAAE,eAAf,AAAO,2BAAe,QAAG;AAGrC,YAFF,cAAS;AACoC,cAA3C,iBAAW,AAAO,sBAAU,gBAAU,IAAI;;mCAElC;kBAAQ;AAGhB,cAFF,cAAS;AACsC,gBAA7C,iBAAW,AAAO,uBAAW,gBAAU,KAAK;;wCAErC;AAGP,cAFF,cAAS;AAC8B,gBAArC,iBAAW,AAAO,sBAAU;;;AAGU,UAA1C,iBAAW,AAAO,2BAAe;;MAErC;;AAGE,YAAI,uBAAiB;AACI,UAAV,AAAE,eAAf;AACoB,UAApB,sBAAgB;;MAEpB;;;MAvDuB;iDAChB;;;;IAuDT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiCA;;;QAjBK;;;;;EAiBL;;;;;;;;;;;;;;;;;;;;;;MAgCwB;;;;;;MAWb;;;;;;MAmBK;;;;;;;AAZZ,sBAAI,eACF,MAAW,gBAAJ;AACT,sBAAI,gBACF,AAAY,WAAD,eAAL;AAC+C,QAAvD,WAAM,wBAAW;MACnB;;YAayC;AAAU,2CAAmB,KAAK,EAAE,WAAM;MAAM;;AAQrE,cAAA,AAAK,cAAG;MAAI;;AAMX,cAAA,AAAM,eAAG;MAAI;;AAGb,cAA8E,UAA3E,yBAAkB,MAAM,oBAAiB,eAAE,wBAAe,gBAAG,aAAI,gBAAG,cAAK;MAAE;;YAG3E;AACtB,YAAI,AAAU,SAAM,KAAK,EACvB,MAAO;AACT,cAAa,AAGT,uBAHG,KAAK,KACiB,YAAtB,AAAM,KAAD,kBAAoB,yBACd,YAAX,AAAM,KAAD,OAAS,cACF,YAAZ,AAAM,KAAD,QAAU;MACxB;;AAGoB,6BAAW,sBAAiB,WAAM;MAAM;;iCAnFjC,iBAAsB,MAAW;UAAjC;;MAAsB;MAAW;YACjD,AAAgB,eAAD,IAAI;WACnB,EAAE,IAAI,IAAI,QAAQ,KAAK,IAAI;;IAAM;;kCAGW,6BAAM,MAAM;IAAK;;kCAGjB,gCAAS,MAAM;IAAK;uCAG9B,OAAS;UAAT;kCAAuB,KAAK,EAAE,IAAI,EAAE;IAAK;wCAGxC,OAAc;UAAd;UAAc;kCAAgB,KAAK,EAAE,MAAM,KAAK;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0QnE;;;;;;MAUnB;;;;;;;AAGqB,cAAA,AAAY,qBAAG,OACvC,qCACA,kCAA0C,6BAAkB,KAAZ;MAAiB;;8BAGtB;;AAAY,cAAA,AAAQ,QAAD,SAAyB;MAAQ;gBAGzD,SAAW;8BAAX;;aAAW;AACrD,cAAO,mCAA0C,+BAAQ,IAAI;MAC/D;iBAG6C,SAAgB;8BAAhB;;YAAgB;AAC3D,cAAO,oCAA2C,+BAAQ,KAAK;MACjE;;8BAG4C;;AAAY,cAAA,AAAQ,QAAD,SAAyB;MAAK;;8BAGzC;;AAAY,cAAA,AAAQ,QAAD,SAAyB;MAAK;YAG3E,SAA0B;;YAA1B;8BAA0B;;AAAmB,aAAQ,OAAO;aAAE,cAAc;cAA/B,AAAO;MAAyB;;;UAhDhG;UACA;UACM;UACG;;;MAFT;MAES;YACJ,AAAQ,OAAD,IAAI;AAClB,mDAAW,GAAG,UAAU,MAAM;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;MAyMnB;;;;;;MAyBW;;;;;;MASnB;;;;;;;AAGgC;MAAwB;;;UAjD1D;UACA;UACA;UACS;;;MAFT;MACA;MACS;YACJ,AAAQ,OAAD,IAAI;AAClB,mDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDE;MAAS;;;AAAT;;MAAS;;AAIZ,QAAX;AAGwE,QAF9E,kBAAY,AAAO,AAAY,2BAAG,OAC5B,qCACA,kCAA0C,6BAAyB,KAAnB,AAAO;AACjD,QAAZ;MACF;;8BAGsC;;AACJ,QAA1B,sBAAgB,SAAS;AAC/B,yBAAI,AAAU,SAAD,SAAW,AAAO;AAC7B,cAAI,iCAA2B;AACf,YAAd;AACmD,YAAnD,kBAAY,AAAU,wBAAwB;;AAEpC,UAAZ;;MAEJ;YAG0B;;;AAAY;aAAe,OAAO;aAAE;cAAV,8CAAP;MAA2B;;AAIxD,QAAd;AACe,QAAT;MACR;;AAGE,YAAI,AAAO,sBAAU;AACN,iCAAmB;AACU,UAA1C,gCAA0B,gBAAgB;AAaxC,UAZW,AAAE,eAAf,AAAO,oCAAmB,QAAG;AAC3B,gBAA4B,YAAxB,+BAA2B,gBAAgB;AAG3C,cAFF,cAAS;AAC0D,gBAAjE,kBAAY,kCAA0C,6BAAM,IAAI;;;mCAG1D;kBAAQ;AAClB,kBAA4B,YAAxB,+BAA2B,gBAAgB;AAG3C,gBAFF,cAAS;AAC4D,kBAAnE,kBAAY,mCAA2C,6BAAM,KAAK;;;;AAIlB,UAAtD,kBAAY,AAAU,wBAAwB;;MAElD;;AAGgC,QAA9B,gCAA0B;MAC5B;;;MAxDQ;8CACc;;;;IAwDxB","file":"../../../../../../../../../packages/flutter/src/widgets/async.dart.lib.js"}');
  // Exports:
  return {
    src__widgets__async: async$
  };
}));

//# sourceMappingURL=async.dart.lib.js.map
